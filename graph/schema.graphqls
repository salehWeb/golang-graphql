# type Todo {
#   id: ID!
#   text: String!
#   done: Boolean!
#   user: User!
# }

# type User {
#   id: ID!
#   name: String!
# }

# type Query {
#   todos: [Todo!]!
# }

# input NewTodo {
#   text: String!
#   userId: String!
# }

# type Mutation {
#   createTodo(input: NewTodo!): Todo!
# }


type Query {
  character(id:ID!): Character
  pogues: [Character]!
  kooks: [Character]!
}

type Mutation {
  upsertCharacter(input: CharacterInput!): Character!
}

type Character {
  id: ID!
  name: String!
}

input CharacterInput {
  name: String!
  id: String
}
